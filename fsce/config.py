from detectron2.config import CfgNode as CN


def add_fsce_config(cfg):

    # perform Supervised Contrastive Loss within batch
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH = CN({'ENABLED': False})  # to be used to enable contrastive loss for double head
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.MLP_FEATURE_DIM = 128
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.TEMPERATURE = 0.1
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.LOSS_WEIGHT = 1.0
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.DECAY = CN({'ENABLED': False})
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.DECAY.STEPS = [8000, 16000]
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.DECAY.RATE = 0.2
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.IOU_THRESHOLD = 0.5
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.LOSS_VERSION = 'V1'
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.REWEIGHT_FUNC = 'none'

    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.STORAGE = CN({'ENABLED': False})
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.STORAGE.START = 3000
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.STORAGE.IOU_THRESHOLD = 0.8

    # use classes prototypes obtained from base training.
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.PROTOTYPE = CN()  # use with ContrastiveROIHeadsWithPrototype
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.PROTOTYPE.DATASET = 'PASCAL VOC'
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.PROTOTYPE.PATH = ''
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.PROTOTYPE.DISABLE_PROTOTYPE_GRAD = True
    # train the contrastive head only
    cfg.MODEL.ROI_BOX_HEAD.CONTRASTIVE_BRANCH.HEAD_ONLY = False
    
    cfg.MODEL.ROI_BOX_HEAD.BOX_REG_WEIGHT = 1.0
    cfg.MODEL.ROI_BOX_HEAD.BOX_CLS_WEIGHT = 1.0
    cfg.MODEL.ROI_BOX_HEAD.SMOOTH_L1_BETA = 0.0
    cfg.MODEL.ROI_HEADS.NMS_THRESH_TEST = 0.5
    cfg.MODEL.ROI_HEADS.SCORE_THRESH_TEST = 0.05
    cfg.MODEL.ROI_HEADS.OUTPUT_LAYER = ''